enum AttributeType {
    BOOLEAN,
    STRING,
    INT,
    FLOAT
}

interface AttributeSpec {
    id: String!
}

type BooleanAttributeSpec implements AttributeSpec {
    id: String!
    default: Boolean
}

type IntAttributeSpec implements AttributeSpec {
    id: String!
    min: Int
    max: Int
    default: Int
}

type FloatAttributeSpec implements AttributeSpec {
    id: String!
    min: Float
    max: Float
    default: Float
}

type StringAttributeSpec implements AttributeSpec {
    id: String!
    default: String
}

type ItemSpec {
    id: String!
    attributes: [AttributeSpec]
}

type BooleanAttribute {
    id: String!
    value: Boolean!
}

type StringAttribute {
    id: String!
    value: Boolean!
}

type FloatAttribute {
    id: String!
    value: Boolean!
}

type IntAttribute {
    id: String!
    value: Int!
}

union Attribute = BooleanAttribute | StringAttribute | FloatAttribute | IntAttribute 

type Item {
    id: String!
    attributes: [Attribute!]
}

type Build {
    id: String!
    name: String!
    items: [Item!]
}

input InputAttribute {
    id: String!
    valueBool: Boolean
    valueString: String
    valueFloat: Float
    valueInt: Int
}

input InputItem {
    id: String!
    attributes: [InputAttribute!]
}

input InputBuild {
    name: String!
    items: [InputItem!]
}

type Query {
    itemsFor(target: String!): [ItemSpec!]
    build(id: String!): Build!
}

type Mutation {
    createBuild(build: InputBuild!): Build!
    editBuild(id: String!, build: InputBuild!): Build!
}